import net.minecraftforge.gradle.common.task.SignJar

buildscript {
    repositories {
        maven { url = 'https://files.minecraftforge.net/maven' }
        jcenter()
        mavenCentral()
    }
    dependencies {
        classpath 'net.minecraftforge.gradle:ForgeGradle:3.+'
    }
}
apply plugin: 'net.minecraftforge.gradle'
apply plugin: 'eclipse'
apply plugin: 'maven-publish'

version = "1.12.2-1.11.1"
group = "hellfirepvp.modularmachinery"
archivesBaseName = "modularmachinery"
String build_version = ""

// Most likely inside Jenkins. Or homebrew environment.
// I hope you know what you do if it's the latter.
if (System.getenv("BUILD_NUMBER") != null) {
    build_version = version + "-v" + System.getenv("BUILD_NUMBER")
}

sourceCompatibility = targetCompatibility = compileJava.sourceCompatibility = compileJava.targetCompatibility = '1.8'

minecraft {

    mappings channel: 'snapshot', version: '20171003-1.12'

    runs {
        client {
            workingDirectory project.file('run')

            property 'forge.logging.markers', 'SCAN,REGISTRIES,REGISTRYDUMP'
            property 'forge.logging.console.level', 'info'
        }

        server {

            property 'forge.logging.markers', 'SCAN,REGISTRIES,REGISTRYDUMP'
            property 'forge.logging.console.level', 'info'
        }
    }
}

repositories {
    maven {
        // for rf stuffs
        url = "https://maven.covers1624.net"
    }

    maven {
        // location of the maven that hosts JEI files
        url = "http://dvs1.progwml6.com/files/maven"
    }

    maven {
        // CraftTweaker
        url "https://maven.blamejared.com/"
    }

    maven {
        // Brandonscore and DE
        url "http://chickenbones.net/maven/"
    }

    maven {
        // Open Computers
        url "http://maven.cil.li/"
    }
    
    maven {
        // Curseforge
        url "https://minecraft.curseforge.com/api/maven"
    }

}

dependencies {

    minecraft 'net.minecraftforge:forge:1.12.2-14.23.5.2855'

    compileOnly fg.deobf('mezz.jei:jei_1.12.2:4.14.4.267')
    runtimeOnly fg.deobf('mezz.jei:jei_1.12.2:4.14.4.267')

    compileOnly fg.deobf('cofh:RedstoneFlux:1.12-2.1.0.7:universal')
    runtimeOnly fg.deobf('cofh:RedstoneFlux:1.12-2.1.0.7:universal')

    compileOnly fg.deobf('CraftTweaker2:CraftTweaker2-MC1120-Main:1.12-4.1.14.520')
    runtimeOnly fg.deobf('CraftTweaker2:CraftTweaker2-MC1120-Main:1.12-4.1.14.520')

    deobf group: 'codechicken', name: 'CodeChickenLib', version: '1.12.2-3.2.2.353', classifier: 'universal'
    deobf group: 'com.brandon3055.brandonscore', name: 'BrandonsCore', version: '1.12.2-2.4.9.195', classifier: 'universal'
    deobf group: 'com.brandon3055.draconicevolution', name: 'Draconic-Evolution', version: '1.12.2-2.3.18.329', classifier: 'universal'

    deobf "gregtechce:gregtech:1.12.2:1.5.21.182"

}

tasks.withType(JavaCompile) {
    options.encoding = "UTF-8"
}

//Sign jar from flatfile if present
task signJar(type: SignJar, dependsOn: jar) {
    onlyIf {
        project.hasProperty('keyStore')
    }
    if (project.hasProperty('keyStore')) {
        keyStore = project.keyStore
        alias = project.alias
        storePass = project.storePass
        keyPass = project.keyPass
        inputFile = jar.archivePath
        outputFile = jar.archivePath
    } else {
        logger.warn("No key store found, not signing the output jar\n")
    }
}

build.dependsOn signJar

// Example for how to get properties into the manifest for reading by the runtime..
jar {
    manifest {
        attributes([
                "Specification-Title": "astralsorcery",
                "Specification-Vendor": "hellfirepvp",
                "Specification-Version": "1",
                "Implementation-Title": project.name,
                "Implementation-Version": "${version}",
                "Implementation-Vendor" : "hellfirepvp",
                "Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ")
        ])
    }
}

task deobfJar(type: Jar) {
    from(sourceSets.main.output)
    archiveName = "${baseName}-${version}-deobf.${extension}"
}

task srcJar(type: Jar) {
    from(sourceSets.main.java)
    classifier = 'sources'
    archiveName = "${baseName}-${version}-sources.${extension}"
}

artifacts {
    archives deobfJar, srcJar
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            groupId project.group
            artifactId project.archivesBaseName
            version build_version
            from components.java

            artifact deobfJar {
                classifier 'deobf'
            }
            artifact srcJar {
                classifier 'sources'
            }
        }
    }

    repositories {
        maven {
            url "file://" + System.getenv("LOCAL_MAVEN")
        }
    }
}
